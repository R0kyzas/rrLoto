[{"C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\index.js":"1","C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\App.js":"2","C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Components\\Header.jsx":"4","C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Components\\Navbar.jsx":"5","C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Pages\\Profile.jsx":"6","C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Pages\\Home.jsx":"7","C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Pages\\Login.jsx":"8","C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Pages\\Other.jsx":"9","C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Pages\\Admin.jsx":"10","C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Components\\Checkbox.jsx":"11","C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\api\\axios.js":"12","C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Components\\CancelModal.jsx":"13","C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Components\\ResponseNotification.jsx":"14","C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Pages\\CancelPayment.jsx":"15","C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Components\\RedirectToPaymentNotification.jsx":"16"},{"size":740,"mtime":1666550798664,"results":"17","hashOfConfig":"18"},{"size":873,"mtime":1667744531315,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1666550798664,"results":"20","hashOfConfig":"18"},{"size":566,"mtime":1666550798657,"results":"21","hashOfConfig":"18"},{"size":1162,"mtime":1666551629909,"results":"22","hashOfConfig":"18"},{"size":6172,"mtime":1667863346208,"results":"23","hashOfConfig":"18"},{"size":14843,"mtime":1667932382886,"results":"24","hashOfConfig":"18"},{"size":4232,"mtime":1667932055978,"results":"25","hashOfConfig":"18"},{"size":4036,"mtime":1667862155672,"results":"26","hashOfConfig":"18"},{"size":5731,"mtime":1667932026719,"results":"27","hashOfConfig":"18"},{"size":570,"mtime":1666735045934,"results":"28","hashOfConfig":"18"},{"size":106,"mtime":1666552217531,"results":"29","hashOfConfig":"18"},{"size":2362,"mtime":1667932017201,"results":"30","hashOfConfig":"18"},{"size":2086,"mtime":1667931897683,"results":"31","hashOfConfig":"18"},{"size":1146,"mtime":1667746580926,"results":"32","hashOfConfig":"18"},{"size":931,"mtime":1667743925897,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1uj0v0",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\App.js",[],[],"C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Components\\Header.jsx",[],[],"C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Components\\Navbar.jsx",[],[],"C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Pages\\Profile.jsx",["86","87"],[],"import React, { useState, useEffect } from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport axios from '../api/axios';\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Table from 'react-bootstrap/Table';\r\nimport ResponseNotification from '../Components/ResponseNotification';\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    const getToken = localStorage.getItem('userToken');\r\n    \r\n    const [data, setData] = useState([]);\r\n    const [paymentSuccessMessage, setPaymentSuccessMessage] = useState('');\r\n    const [showNotification, setShowNotification] = useState(false);\r\n\r\n    const { promiseInProgress } = usePromiseTracker({area: props.area});\r\n\r\n    const query =  window.location.search.substring(1);\r\n\r\n    useEffect(() => {\r\n        if(getToken)\r\n        {\r\n            const getData = async () => {\r\n                \r\n                    const {data: res} = await axios.get(`/ticket-list/${getToken}`)\r\n                    setData(res);\r\n                \r\n            }\r\n            if(query)\r\n            {\r\n                const getPaymentAnswer = async () =>{\r\n                    await axios.get(`/accepted/${query}`)\r\n                    .then((res)=> {\r\n                        if(res.status === 200)\r\n                        {\r\n                            setPaymentSuccessMessage(res.data);\r\n                            setShowNotification(true);\r\n                            window.history.pushState({}, document.title, \"/\" + \"profile\")\r\n                        }\r\n                    })\r\n                }\r\n                trackPromise(getPaymentAnswer());\r\n            }\r\n            trackPromise(getData());\r\n        }\r\n    }, [paymentSuccessMessage])\r\n    \r\n    return(\r\n        <>\r\n            {promiseInProgress &&\r\n                <Box sx={{ \r\n                    display: 'flex', \r\n                    justifyContent: 'center', \r\n                    position: 'absolute', \r\n                    top: '0', \r\n                    left: '0', \r\n                    right: '0', \r\n                    height: '100%', \r\n                    alignItems: 'center'\r\n                }}>\r\n                    <CircularProgress />\r\n                </Box>\r\n            }\r\n            {!promiseInProgress &&\r\n                <div className='container d-flex profile justify-content-between'>\r\n                    <ResponseNotification data={paymentSuccessMessage} showNotification={showNotification} setShowNotification={setShowNotification} />\r\n                    {data && \r\n                        (data.orders?.map((order) => (\r\n                            <div className=\"card card-ticket text-center\">\r\n                                        <div className=\"card-header\">\r\n                                            <div>\r\n                                                Order number: {order.order_nr}\r\n                                            </div>\r\n                                        </div>\r\n                                    <div className='card-body'>\r\n                                    <Dropdown className='w-100'>\r\n                                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className='w-100 d-flex justify-content-between align-items-center'>\r\n                                            <div>\r\n                                                Number of tickets: {order.quantity}\r\n                                            </div>\r\n                                            <div>\r\n                                                {order.active === 0 && ('Waiting for activation')}\r\n                                                {order.active === 1 && ('Actived')}\r\n                                                {order.active === 2 && ('Cancelled')}\r\n                                            </div>\r\n                                        </Dropdown.Toggle>\r\n\r\n                                        <Dropdown.Menu>\r\n                                                <div className='tickets d-flex w-100 justify-content-between'>\r\n                                                <Table striped bordered>\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Ticket number</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {order.tickets.map((ticket) => (\r\n                                                            <tr key={ticket.id}>\r\n                                                                <td># {ticket.ticketNumber}</td>\r\n                                                            </tr>\r\n                                                        ))}\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                            </div>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    ))}\r\n                    {data.length === 0 && (\r\n                        <div className=\"card card-ticket text-center\">\r\n                            <div className=\"card-header\">\r\n                                <div>\r\n                                    Order information\r\n                                </div>\r\n                            </div>\r\n                            <div className='card-body'>\r\n                                <div>\r\n                                    You have not purchased a ticket at this time\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;","C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Pages\\Home.jsx",[],[],"C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Pages\\Login.jsx",["88"],[],"import React, { useEffect } from 'react';\r\nimport axios from '../api/axios';\r\nimport { useForm } from 'react-hook-form';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst LOGIN_URL = '/login';\r\n\r\nconst Login = (props) => {\r\n    const loginToken = sessionStorage.getItem('loggedIn');\r\n    const { promiseInProgress } = usePromiseTracker({area: props.area});\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(()=>{\r\n        if(loginToken)\r\n        {\r\n            navigate('/admin');\r\n        }\r\n    },[]);\r\n    \r\n    const {\r\n        register, \r\n        formState: {errors}, \r\n        handleSubmit,\r\n    } = useForm({\r\n        mode: \"onChange\",\r\n        defaultValues: {\r\n            username: \"\",\r\n            password: \"\",\r\n        }\r\n    });\r\n\r\n    const postUserData = async (data) => {\r\n        await axios.post(LOGIN_URL,data)\r\n        .then((res) => {\r\n            if(res.status === 200)\r\n            {\r\n                sessionStorage.setItem(\"loggedIn\", res.data.token);\r\n                navigate('/admin');\r\n            }\r\n        })\r\n    }\r\n    \r\n    const onSubmit = (data) => {\r\n        trackPromise(postUserData(data));\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {promiseInProgress &&\r\n                <Box sx={{ \r\n                    display: 'flex', \r\n                    justifyContent: 'center', \r\n                    position: 'absolute', \r\n                    top: '0', \r\n                    left: '0', \r\n                    right: '0', \r\n                    height: '100%', \r\n                    alignItems: 'center'\r\n                }}>\r\n                    <CircularProgress />\r\n                </Box>\r\n            }\r\n            {!promiseInProgress &&\r\n                <div className='container d-flex justify-content-center'>\r\n                    <div className=\"card card-ticket text-center\">\r\n                        <div className=\"card-header\">\r\n                             Prisijungimas\r\n                        </div>\r\n                        <div className='card-body'>\r\n                            <form onSubmit={handleSubmit(onSubmit)} method=\"POST\" >\r\n                                    <div className='form-group'>\r\n                                        <input \r\n                                            type='text' \r\n                                            className='form-control' \r\n                                            placeholder='Įveskite slapyvardį'\r\n                                            {...register(\"username\", {required: true})}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {errors.username?.type === \"required\" && \"Slapyvardis privalomas\"}\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                        <input \r\n                                            type='password' \r\n                                            className='form-control' \r\n                                            placeholder='Įveskite slaptažodį'\r\n                                            {...register(\"password\", {required: true})}\r\n                                         />\r\n                                    </div>\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {errors.password?.type === \"required\" && \"Slaptažodis privalomas\"}\r\n                                    </div>\r\n                                    <button \r\n                                        type='submit' \r\n                                        className='btn btn-primary'\r\n                                    >\r\n                                        Prisijungti\r\n                                    </button>\r\n                                </form>\r\n                        </div>\r\n                     </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Pages\\Other.jsx",[],[],"C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Pages\\Admin.jsx",["89"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from '../api/axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport CancelModal from '../Components/CancelModal';\r\nimport ResponseNotification from '../Components/ResponseNotification';\r\n\r\nconst Admin = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const sessionToken = sessionStorage.getItem(\"loggedIn\");\r\n    const [data, setData] = useState({});\r\n    const [msg, setMsg] = useState(null);\r\n    const [showCancelModal, setShowCancelModal] = useState(false);\r\n    const [orderId, setOrderId] = useState('');\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    const [responseData, setResponseData] = useState({});\r\n\r\n    const [showNotification, setShowNotification] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(!sessionToken)\r\n        {\r\n            navigate('/login');\r\n        }\r\n        const getData = async () => {\r\n            const {data: res} = await axios.get('/admin');\r\n            setData(res);\r\n        }\r\n        getData();\r\n    }, [msg])\r\n    \r\n\r\n    const handleAccept = async (data) => {\r\n        await axios.post(`/admin/confirm/${data}`)\r\n        .then((res) => {\r\n            const someData = {...[res.data.success]};\r\n            setMsg(someData)\r\n        })\r\n    }\r\n\r\n    const handleCancel = (value) => {\r\n        setOrderId(value);\r\n        setShowCancelModal(true);\r\n    }\r\n\r\n    const handleClick = async() => {\r\n        \r\n        await axios.post(`/admin/get-winner`)\r\n        .then((res) => {\r\n            setResponseData(res.data);\r\n            setShowNotification(true);\r\n        })\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            {sessionToken &&\r\n            <>\r\n                <CancelModal showCancelModal={showCancelModal} setShowCancelModal={setShowCancelModal} orderId={orderId} setMsg={setMsg}/>\r\n                <div className='container d-flex admin-panel justify-content-center'>\r\n                    <ResponseNotification data={responseData} showNotification={showNotification} setShowNotification={setShowNotification} />\r\n                    <div className=\"card card-ticket text-center\">\r\n                        <div className=\"card-header\">\r\n                            Admin\r\n                        </div>\r\n                        <div className='card-body'>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"form-outline\">\r\n                                <input \r\n                                    type=\"search\" \r\n                                    className=\"form-control\" \r\n                                    placeholder='search'\r\n                                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <button\r\n                                className=\"btn btn-danger\"\r\n                                onClick={handleClick}\r\n                            >\r\n                                Išrinkti nugalėtoją\r\n                            </button>\r\n                        </div>\r\n                            <Table striped bordered>\r\n                                <thead>\r\n                                    <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name,Lastname</th>\r\n                                    <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {data.orders?.filter((order) => \r\n                                        order.order_nr.includes(searchQuery) ||\r\n                                        order.tickets[0].name.includes(searchQuery) ||\r\n                                        order.tickets[0].lastname.includes(searchQuery) \r\n                                        ).map((order) => (\r\n                                        <tr key={order.id}>\r\n                                            <td>{order.order_nr}</td>\r\n                                            <td>{order.tickets[0].name} {order.tickets[0].lastname}</td>\r\n                                            <td>\r\n                                                \r\n                                                {order.active === 0 && (\r\n                                                    <>\r\n                                                        <button className='btn btn-danger admin-table' onClick={() => handleAccept(order.id)}>Accept</button> \r\n                                                        <button className='btn btn-danger admin-table' onClick={() => handleCancel(order.id)}>Cancel</button>\r\n                                                    </>\r\n                                                )}\r\n                                                {order.active === 1 && (\r\n                                                    <p>Aktyvuotas</p>\r\n                                                )}\r\n                                                {order.active === 2 && (\r\n                                                    <p>Atšauktas</p>\r\n                                                )}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Admin;","C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Components\\Checkbox.jsx",[],[],"C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\api\\axios.js",[],[],"C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Components\\CancelModal.jsx",[],[],"C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Components\\ResponseNotification.jsx",[],[],"C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Pages\\CancelPayment.jsx",[],[],"C:\\Users\\Rokas\\Desktop\\productionRrloto\\frontend\\src\\Components\\RedirectToPaymentNotification.jsx",[],[],{"ruleId":"90","severity":1,"message":"91","line":42,"column":78,"nodeType":"92","messageId":"93","endLine":42,"endColumn":79},{"ruleId":"94","severity":1,"message":"95","line":50,"column":8,"nodeType":"96","endLine":50,"endColumn":31,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":21,"column":7,"nodeType":"96","endLine":21,"endColumn":9,"suggestions":"99"},{"ruleId":"94","severity":1,"message":"100","line":32,"column":8,"nodeType":"96","endLine":32,"endColumn":13,"suggestions":"101"},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getToken' and 'query'. Either include them or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has missing dependencies: 'loginToken' and 'navigate'. Either include them or remove the dependency array.",["103"],"React Hook useEffect has missing dependencies: 'navigate' and 'sessionToken'. Either include them or remove the dependency array.",["104"],{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [getToken, paymentSuccessMessage, query]",{"range":"111","text":"112"},"Update the dependencies array to be: [loginToken, navigate]",{"range":"113","text":"114"},"Update the dependencies array to be: [msg, navigate, sessionToken]",{"range":"115","text":"116"},[1796,1819],"[getToken, paymentSuccessMessage, query]",[685,687],"[loginToken, navigate]",[1096,1101],"[msg, navigate, sessionToken]"]